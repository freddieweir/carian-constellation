# Example Terraform Variables for Persistent Infrastructure
# Copy this file to terraform.tfvars and fill in your values

# ============================================================================
# Project Configuration
# ============================================================================

project_name = "carian-constellation"
environment  = "dev"  # Options: dev, staging, production

# ============================================================================
# AWS Configuration
# ============================================================================

aws_region              = "us-east-1"
terraform_state_bucket  = "your-terraform-state-bucket"  # Must match backend config

# ============================================================================
# Owner Information (for tagging)
# ============================================================================

owner_name      = "stalheim"
owner_email     = "your.email@example.com"
github_username = "yourusername"

# ============================================================================
# Domain Configuration
# ============================================================================

domain_name = "yourdomain.com"  # Your actual domain

# ============================================================================
# AWS Load Balancer Controller
# ============================================================================

enable_alb_controller = true
alb_controller_version = "1.6.2"

# ============================================================================
# External Secrets Operator
# ============================================================================

enable_external_secrets  = true
external_secrets_version = "0.9.9"

# Secrets backend: "aws-secrets-manager" or "1password"
secrets_backend = "aws-secrets-manager"

# If using AWS Secrets Manager:
# Secrets should be created with prefix: carian-constellation/
# Example: carian-constellation/open-webui/api-key

# If using 1Password:
# Deploy 1Password Connect first, then enable External Secrets
# See: https://github.com/1Password/connect-helm-charts

# ============================================================================
# cert-manager (TLS Certificate Management)
# ============================================================================

enable_cert_manager = true
cert_manager_version = "v1.13.2"

# Let's Encrypt configuration
letsencrypt_email = "your.email@example.com"
letsencrypt_environment = "staging"  # Options: "staging" or "production"

# ⚠️  IMPORTANT: Start with "staging" to avoid rate limits!
# Let's Encrypt production rate limits:
# - 50 certificates per domain per week
# - 5 failed validations per hour
#
# Once tested with staging, switch to "production"

# ============================================================================
# Monitoring Stack (Prometheus & Grafana)
# ============================================================================

enable_monitoring = true

# Prometheus configuration
prometheus_retention_days = 15
prometheus_storage_size   = "10Gi"  # Adjust based on metrics volume

# Grafana configuration
grafana_admin_password      = "CHANGE_ME_STRONG_PASSWORD"  # Change this!
enable_grafana_persistence  = true
grafana_storage_size        = "5Gi"

# ============================================================================
# Ingress Configuration
# ============================================================================

# Ingress class: "alb" (AWS ALB) or "nginx" (NGINX Ingress Controller)
ingress_class = "alb"

# Enable NGINX Ingress Controller (alternative to ALB)
enable_ingress_nginx = false

# ============================================================================
# Storage Configuration
# ============================================================================

# EBS Storage Classes
enable_ebs_storage_class = true

# EFS Storage Class (for shared volumes across pods)
enable_efs_storage_class = false
efs_file_system_id       = ""  # Required if enable_efs_storage_class = true

# To create EFS:
# aws efs create-file-system \
#   --performance-mode generalPurpose \
#   --throughput-mode bursting \
#   --encrypted \
#   --tags Key=Name,Value=carian-constellation-efs

# ============================================================================
# Cluster Components
# ============================================================================

# Metrics Server (required for HPA and kubectl top)
enable_metrics_server  = true
metrics_server_version = "3.11.0"

# Cluster Autoscaler (automatic node scaling)
enable_cluster_autoscaler  = true
cluster_autoscaler_version = "9.29.3"

# Reloader (auto-restart pods on ConfigMap/Secret changes)
enable_reloader  = true
reloader_version = "1.0.44"

# Node Problem Detector (advanced node health monitoring)
enable_node_problem_detector = false

# ============================================================================
# Cost Optimization Notes
# ============================================================================

# This persistent infrastructure costs approximately:
# - AWS Load Balancer: ~$16-25/month per ALB (created by Ingress resources)
# - EBS Volumes: ~$0.08/GB/month (for Prometheus, Grafana storage)
# - Data Transfer: Variable based on usage
#
# Estimated monthly cost for persistent components:
# - Minimal setup: ~$20-40/month
# - With monitoring and multiple ALBs: ~$40-80/month
#
# These components should remain running 24/7 for:
# - Certificate renewal (cert-manager)
# - Metrics collection (Prometheus)
# - Secret synchronization (External Secrets)
# - Cluster auto-scaling (Cluster Autoscaler)

# ============================================================================
# Deployment Order
# ============================================================================

# 1. Deploy ephemeral infrastructure first (EKS cluster)
# 2. Deploy this persistent infrastructure
# 3. Deploy your applications
#
# To destroy:
# 1. Delete applications first
# 2. Destroy persistent infrastructure (this module)
# 3. Destroy ephemeral infrastructure (EKS cluster)
