---
# Certificate for all services (wildcard)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: carian-wildcard-cert
  namespace: carian-apps
spec:
  secretName: carian-wildcard-tls
  issuer:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: "*.yourdomain.com"
  dnsNames:
    - "*.yourdomain.com"
    - "yourdomain.com"

---
# Main application ingress (Open WebUI, Perplexica)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: carian-apps-ingress
  namespace: carian-apps
  labels:
    app: carian-constellation
  annotations:
    # ALB Controller annotations
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: carian-constellation-alb
    alb.ingress.kubernetes.io/group.name: carian-constellation
    
    # SSL/TLS configuration
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:REGION:ACCOUNT:certificate/CERT_ID"
    
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
    
    # Security headers
    alb.ingress.kubernetes.io/actions.ssl-redirect: |
      {
        "Type": "redirect",
        "RedirectConfig": {
          "Protocol": "HTTPS",
          "Port": "443",
          "StatusCode": "HTTP_301"
        }
      }
    
    # Access logging
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      access_logs.s3.enabled=true,
      access_logs.s3.bucket=carian-constellation-logs,
      access_logs.s3.prefix=alb
    
    # Tags
    alb.ingress.kubernetes.io/tags: |
      Project=Carian-Constellation,
      Environment=Production,
      ManagedBy=Terraform

spec:
  ingressClassName: alb
  
  tls:
    - hosts:
        - webui.yourdomain.com
        - perplexica.yourdomain.com
      secretName: carian-wildcard-tls
  
  rules:
    # Open WebUI routing
    - host: webui.yourdomain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: open-webui
                port:
                  number: 80
    
    # Perplexica routing
    - host: perplexica.yourdomain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: perplexica
                port:
                  number: 80

---
# Monitoring ingress (Grafana)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: carian-monitoring-ingress
  namespace: carian-monitoring
  labels:
    app: carian-constellation
    component: monitoring
  annotations:
    # ALB Controller annotations
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: carian-constellation
    
    # SSL/TLS configuration
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:REGION:ACCOUNT:certificate/CERT_ID"
    
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    
    # Tags
    alb.ingress.kubernetes.io/tags: |
      Project=Carian-Constellation,
      Environment=Production,
      ManagedBy=Terraform

spec:
  ingressClassName: alb
  
  tls:
    - hosts:
        - monitoring.yourdomain.com
      secretName: carian-wildcard-tls
  
  rules:
    # Grafana routing
    - host: monitoring.yourdomain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prometheus-stack-grafana
                port:
                  number: 80
