# ============================================================================
# Open WebUI - ChatGPT-style Interface
# ============================================================================

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open-webui-config
  namespace: carian-apps
  labels:
    app: open-webui
data:
  # Application settings
  ENV: "production"
  WEBUI_NAME: "Carian Observatory"
  
  # Storage
  DATA_DIR: "/app/backend/data"
  
  # Features
  ENABLE_SIGNUP: "true"
  DEFAULT_USER_ROLE: "user"
  ENABLE_RAG_WEB_SEARCH: "true"
  ENABLE_IMAGE_GENERATION: "false"
  
  # Model settings
  DEFAULT_MODELS: "gpt-4,gpt-3.5-turbo"
  
  # Logging
  WEBUI_LOG_LEVEL: "info"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: open-webui-data
  namespace: carian-apps
  labels:
    app: open-webui
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp3
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui
  namespace: carian-apps
  labels:
    app: open-webui
    component: frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: open-webui
  template:
    metadata:
      labels:
        app: open-webui
        component: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        reloader.stakater.com/auto: "true"
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      
      initContainers:
        - name: wait-for-db
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -zv postgresql-client.carian-data.svc.cluster.local 5432; do
                echo "Waiting for PostgreSQL..."
                sleep 2
              done
              echo "PostgreSQL is ready!"
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
      
      containers:
        - name: open-webui
          image: ghcr.io/open-webui/open-webui:main
          imagePullPolicy: Always
          
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          
          envFrom:
            - configMapRef:
                name: open-webui-config
          
          env:
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: open-webui-secrets
                  key: openai-api-key
            
            - name: WEBUI_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: open-webui-secrets
                  key: secret-key
            
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: open-webui-secrets
                  key: db-password
            
            - name: DATABASE_URL
              value: "postgresql://carianuser:$(DATABASE_PASSWORD)@postgresql-client.carian-data.svc.cluster.local:5432/cariandb"
          
          volumeMounts:
            - name: data
              mountPath: /app/backend/data
          
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 2Gi
          
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: open-webui-data

---
apiVersion: v1
kind: Service
metadata:
  name: open-webui
  namespace: carian-apps
  labels:
    app: open-webui
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app: open-webui

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: open-webui
  namespace: carian-apps
  labels:
    app: open-webui
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: open-webui
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: open-webui
  namespace: carian-apps
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: open-webui
